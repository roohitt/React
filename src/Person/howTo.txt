First is : index.js: To render or map the components we have created in this application to the index.html file's elements.
            Here we are mapping App.js's App component that we hav created using class App.

App.js: Has our main component and exporting that component as default to the index.js file.
        THere must be only one parent element inside the component function or class and we can nest other components inside it.
        Like we have used the Person component inside our App.js 
        We can pass arguments to the comppnent function Person and also some text.

Person.js : is a js file to  create a component that is called Person.
            It is called in App.js
            We can use the passed args using props.
            props.children is for text passed inside the opening and closing tag of an element.  

Object in js:
x = {name:"Rohit", Class:"10th"}(name and age are the two variables for that function).
List of Objects in js :
y = [{name:"Sharma},{name:"Rohit"}]

In some places instead of using this.funtion() we have used this.function because we dont want to call it now.

When we use class component state then it will automatically add all the other variables there inside state property
but when we use hooks we have to update that manually means add the rest of the components manually.
therefore in functions while using hooks try to use multiple usestate wiyhm mnultiple elements.

Statefull : that has a used the state property inside it.(also called smart or container component as they contain the state of the component )
stateless: that is not having any relation to state.(also called dumb or presentational components)
(try to use less container components)

We can also pass method references bw the components:
The click property inside the Person component in while returning.

The onclick paragraph  feature is only available in class based components

We can also pass variables to the handler function
So while calling the function use .bind to bind it to the class and
inside of bind pass this and the value you want to pass to the function.
<button onClick={this.switchNameHandler.bind(this, "Sukha")}>Switch Name</button>

Using event in a function:
When we want to change the text just entered:
create a new event handler function that takes a event Object as a arg(this is predefind)
using this Object go to the target and get value at the target.

Two way binding:
when we update the value from textbox to the paragraph
also the current value of para is available inside the textbox

HOw to add css file to a component js file:
create that file and import it is the js file always remember to give a classname to main div of the component and 
use that name for styling in that css file.

Inline styling:
create a object in render and map it to style propperty of any components field.

we have learnt that we can change para text when button clicked but we here are now making it dissapear on 
button click.We are using a handler which changes the state value (showState ) to true or false when called.
Then we user ternary operator.

Now instead of using <person> component every time we wil use javascript arrays and a map function that will map 
map function maps every element in arrays into something else.
inside the array we have all the person data.now we will return it using js.
We can also pass index and it is automatically returned by the react.

in deleteperson handler we use slice() because here we are making changes to the original array but we should make of copy of it First
so this lsice method will return a copy of the original persons array:const persons = this.state.persons.slice();
Or we can use the spread operator that is = ... This will spread all the array elements and create a new array :[...this.state.persons];

Our changed option in map will recieve event as it the first function executed now.
We also pass the id so that we can change only the current element 
NOw in NamechangeHandler find the element with same id.
store it in person
change name value with event value
create new persons array with already persons array
now change person in persons and use it in setstate


ain hughlighs of section 3:we should output content conditionally by using javascript and the same for lists.
                                if you want to return or render a list, you use the map operator,
                                You also learned that map gives you not only the element for which it's currently executing this function
                                but also access to the index if you need that, for example, to remove an element that you should add this key